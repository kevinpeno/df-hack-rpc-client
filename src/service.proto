syntax = "proto2";
option optimize_for = LITE_RUNTIME;

// Core
import "BasicApi.proto";
import "CoreProtocol.proto";

// Plugins
import "AdventureControl.proto";
import "isoworldremote.proto";
import "RemoteFortressReader.proto";
import "rename.proto";

service DFHackRPCService {
  // CoreProtocol
  rpc BindMethod(dfproto.CoreBindRequest) returns (dfproto.CoreBindReply);
  rpc RunCommand(dfproto.CoreRunCommandRequest) returns (dfproto.EmptyMessage);
  rpc CoreSuspend(dfproto.EmptyMessage) returns (dfproto.IntMessage);
  rpc CoreResume(dfproto.EmptyMessage) returns (dfproto.IntMessage);
  rpc RunLua(dfproto.CoreRunLuaRequest) returns (dfproto.StringListMessage);

  // BasicApi
  rpc GetVersion(dfproto.EmptyMessage) returns (dfproto.StringMessage);
  rpc GetDFVersion(dfproto.EmptyMessage) returns (dfproto.StringMessage);
  rpc GetWorldInfo(dfproto.EmptyMessage) returns (dfproto.GetWorldInfoOut);
  rpc ListEnums(dfproto.EmptyMessage) returns (dfproto.ListEnumsOut);
  rpc ListJobSkills(dfproto.EmptyMessage) returns (dfproto.ListJobSkillsOut);
  rpc ListMaterials(dfproto.ListMaterialsIn) returns (dfproto.ListMaterialsOut);
  rpc ListUnits(dfproto.ListUnitsIn) returns (dfproto.ListUnitsOut);
  rpc ListSquads(dfproto.ListSquadsIn) returns (dfproto.ListSquadsOut);
  rpc SetUnitLabors(dfproto.SetUnitLaborsIn) returns (dfproto.EmptyMessage);

  // AdventureControl
  // ???

  // isoworldremote
  rpc GetEmbarkTile(isoworldremote.TileRequest) returns (isoworldremote.EmbarkTile);
  rpc GetEmbarkInfo(isoworldremote.MapRequest) returns (isoworldremote.MapReply);
  rpc GetRawNames(isoworldremote.MapRequest) returns (isoworldremote.RawNames);

  // RemoteFortressReader
  rpc GetMaterialList(dfproto.EmptyMessage) returns (RemoteFortressReader.MaterialList);
  rpc GetGrowthList(dfproto.EmptyMessage) returns (RemoteFortressReader.MaterialList);
  rpc GetBlockList(RemoteFortressReader.BlockRequest) returns (RemoteFortressReader.BlockList);
  rpc CheckHashes(dfproto.EmptyMessage) returns (dfproto.EmptyMessage);
  rpc GetTiletypeList(dfproto.EmptyMessage) returns (RemoteFortressReader.TiletypeList);
  rpc GetPlantList(RemoteFortressReader.BlockRequest) returns (RemoteFortressReader.PlantList);
  rpc GetUnitList(dfproto.EmptyMessage) returns (RemoteFortressReader.UnitList);
  rpc GetUnitListInside(RemoteFortressReader.BlockRequest) returns (RemoteFortressReader.UnitList);
  rpc GetViewInfo(dfproto.EmptyMessage) returns (RemoteFortressReader.ViewInfo);
  rpc GetMapInfo(dfproto.EmptyMessage) returns (RemoteFortressReader.MapInfo);
  rpc ResetMapHashes(dfproto.EmptyMessage) returns (dfproto.EmptyMessage);
  rpc GetItemList(dfproto.EmptyMessage) returns (RemoteFortressReader.MaterialList);
  rpc GetBuildingDefList(dfproto.EmptyMessage) returns (RemoteFortressReader.BuildingList);
  rpc GetWorldMap(dfproto.EmptyMessage) returns (RemoteFortressReader.WorldMap);
  rpc GetWorldMapNew(dfproto.EmptyMessage) returns (RemoteFortressReader.WorldMap);
  rpc GetRegionMaps(dfproto.EmptyMessage) returns (RemoteFortressReader.RegionMaps);
  rpc GetRegionMapsNew(dfproto.EmptyMessage) returns (RemoteFortressReader.RegionMaps);
  rpc GetCreatureRaws(dfproto.EmptyMessage) returns (RemoteFortressReader.CreatureRawList);
  rpc GetPartialCreatureRaws(RemoteFortressReader.ListRequest) returns (RemoteFortressReader.CreatureRawList);
  rpc GetWorldMapCenter(dfproto.EmptyMessage) returns (RemoteFortressReader.WorldMap);
  rpc GetPlantRaws(dfproto.EmptyMessage) returns (RemoteFortressReader.PlantRawList);
  rpc GetPartialPlantRaws(RemoteFortressReader.ListRequest) returns (RemoteFortressReader.PlantRawList);
  rpc CopyScreen(dfproto.EmptyMessage) returns (RemoteFortressReader.ScreenCapture);
  rpc PassKeyboardEvent(RemoteFortressReader.KeyboardEvent) returns (dfproto.EmptyMessage);
  rpc SendDigCommand(RemoteFortressReader.DigCommand) returns (dfproto.EmptyMessage);
  rpc SetPauseState(RemoteFortressReader.SingleBool) returns (dfproto.EmptyMessage);
  rpc GetPauseState(dfproto.EmptyMessage) returns (RemoteFortressReader.SingleBool);
  rpc GetVersionInfo(dfproto.EmptyMessage) returns (RemoteFortressReader.VersionInfo);
  rpc GetReports(dfproto.EmptyMessage) returns (RemoteFortressReader.Status);

  // missing message MoveCommandParams
  // rpc MoveCommand(RemoteFortressReader.MoveCommandParams) returns (dfproto.EmptyMessage);
  // rpc JumpCommand(RemoteFortressReader.MoveCommandParams) returns (dfproto.EmptyMessage);

  // missing message MenuContents
  // rpc MenuQuery(dfproto.EmptyMessage) returns (RemoteFortressReader.MenuContents);

  // missing message dfproto.IntMessage
  // rpc MovementSelectCommand(RemoteFortressReader.dfproto.IntMessage) returns (dfproto.EmptyMessage);
  
  // missing message MiscMoveParams
  //rpc MiscMoveCommand(RemoteFortressReader.MiscMoveParams) returns (dfproto.EmptyMessage);
  rpc GetLanguage(dfproto.EmptyMessage) returns (RemoteFortressReader.Language);

  // rename
  rpc RenameSquad(dfproto.RenameSquadIn) returns (dfproto.EmptyMessage);
  rpc RenameUnit(dfproto.RenameUnitIn) returns (dfproto.EmptyMessage);
  rpc RenameBuilding(dfproto.RenameBuildingIn) returns (dfproto.EmptyMessage);
}
